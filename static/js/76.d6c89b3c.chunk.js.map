{"version":3,"file":"static/js/76.d6c89b3c.chunk.js","mappings":"wMAKA,MAAMA,GAAcC,EAAAA,EAAAA,OAAKC,IAAwD,IAAvD,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,IAAEC,EAAG,KAAEC,EAAI,SAAEC,GAAUN,EACzE,MAAOO,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GAEzCG,GAAmBC,EAAAA,EAAAA,cAAY,KAC9BP,GACHE,GAAa,EACf,GACC,CAACF,IAEEQ,GAAmBD,EAAAA,EAAAA,cAAY,KAC9BP,GACHE,GAAa,EACf,GACC,CAACF,IAEES,GAAkBF,EAAAA,EAAAA,cAAY,KAClCF,GAAe,EAAK,GACnB,IAEH,OACEK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,eACVK,aAAcV,EACdW,aAAcT,EACdU,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,SAAU,CAAEC,MAAM,GAClBC,WAAY,CAAEC,SAAU,IACxBC,MAAO,CACLC,UAAW,gBACXC,WAAY,YACZC,SAAU,WACVC,OAAQ5B,EAAY,EAAI,GAE1B6B,WAAY,CACVC,MAAO,KACPR,WAAY,CACVS,KAAM,SACNC,UAAW,IACXC,QAAS,KAEXtB,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,gBACVO,QAAS,CAAEC,QAAS,GACpBgB,QAAS,CAAEhB,QAASf,EAAc,EAAI,GACtCmB,WAAY,CAAEC,SAAU,IAAMZ,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,OACE0B,IAAKtC,EACLuC,IAAK1C,EACL2C,QAAQ,OACRC,OAAQ9B,EACRgB,MAAO,CACLe,MAAO,OACPC,OAAQ,OACRC,UAAW,UACXC,QAAS,OACTC,gBAAiB,UACjBzB,QAASf,EAAc,EAAI,EAC3BmB,WAAY,oBACZI,WAAY,YACZD,UAAW,oBAGfhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAe,CAAAjC,UACZX,GAAaD,KACba,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,kBACVO,QAAS,CAAEC,QAAS,GACpBgB,QAAS,CAAEhB,QAAS,GACpB2B,KAAM,CAAE3B,QAAS,GACjBI,WAAY,CAAEC,SAAU,IAAMZ,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACnB,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,CAACC,EAAGC,KACbvC,EAAAA,EAAAA,KAAA,QACEC,UAAU,MAAKC,SAGdoC,GAAC,GAAAE,OAFMvD,EAAK,KAAAuD,OAAIF,SAMvBtC,EAAAA,EAAAA,KAAA,KAAGyC,KAAMpD,EAAMqD,OAAO,SAASC,IAAI,sBAAsB1C,UAAU,eAAcC,UAC/EF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAe,CAACC,KAAMC,EAAAA,mBAOnC3C,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,kBACVc,MAAO,CACLC,UAAW,gBACXC,WAAY,aACZf,SAAA,EAEFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKjB,KACLe,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAqBC,SAAEhB,WAGpC,IAIVJ,EAAYiE,YAAc,cAE1B,S","sources":["components/ProjectCard.js"],"sourcesContent":["import React, { useState, memo, useCallback } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst ProjectCard = memo(({ title, description, tech, img, link, isMobile }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    if (!isMobile) {\r\n      setIsHovered(true);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    if (!isMobile) {\r\n      setIsHovered(false);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  const handleImageLoad = useCallback(() => {\r\n    setImageLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-wrapper\">\r\n      <motion.div \r\n        className=\"project-card\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        initial={{ opacity: 0 }}\r\n        whileInView={{ opacity: 1 }}\r\n        viewport={{ once: true }}\r\n        transition={{ duration: 0.3 }}\r\n        style={{ \r\n          transform: 'translateZ(0)',\r\n          willChange: 'transform',\r\n          position: 'relative',\r\n          zIndex: isHovered ? 1 : 0\r\n        }}\r\n        whileHover={{\r\n          scale: 1.05,\r\n          transition: {\r\n            type: \"spring\",\r\n            stiffness: 300,\r\n            damping: 20\r\n          }\r\n        }}\r\n      >\r\n        <div className=\"project-img-container\">\r\n          <motion.div\r\n            className=\"project-image\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: imageLoaded ? 1 : 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <img \r\n              src={img} \r\n              alt={title}\r\n              loading=\"lazy\"\r\n              onLoad={handleImageLoad}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'contain',\r\n                padding: '1rem',\r\n                backgroundColor: '#f8f9fa',\r\n                opacity: imageLoaded ? 1 : 0,\r\n                transition: 'opacity 0.3s ease',\r\n                willChange: 'transform',\r\n                transform: 'translateZ(0)'\r\n              }}\r\n            />\r\n            <AnimatePresence>\r\n              {(isHovered || isMobile) && (\r\n                <motion.div \r\n                  className=\"project-overlay\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  transition={{ duration: 0.2 }}\r\n                >\r\n                  <div className=\"tech-tags\">\r\n                    {tech?.map((t, i) => (\r\n                      <span \r\n                        className=\"tag\" \r\n                        key={`${title}-${t}`}\r\n                      >\r\n                        {t}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  </a>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </motion.div>\r\n        </div>\r\n        <motion.div \r\n          className=\"project-content\"\r\n          style={{\r\n            transform: 'translateZ(0)',\r\n            willChange: 'transform'\r\n          }}\r\n        >\r\n          <h5>{title}</h5>\r\n          <p className=\"project-description\">{description}</p>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n});\r\n\r\nProjectCard.displayName = 'ProjectCard';\r\n\r\nexport default ProjectCard;\r\n"],"names":["ProjectCard","memo","_ref","title","description","tech","img","link","isMobile","isHovered","setIsHovered","useState","imageLoaded","setImageLoaded","handleMouseEnter","useCallback","handleMouseLeave","handleImageLoad","_jsx","className","children","_jsxs","motion","div","onMouseEnter","onMouseLeave","initial","opacity","whileInView","viewport","once","transition","duration","style","transform","willChange","position","zIndex","whileHover","scale","type","stiffness","damping","animate","src","alt","loading","onLoad","width","height","objectFit","padding","backgroundColor","AnimatePresence","exit","map","t","i","concat","href","target","rel","FontAwesomeIcon","icon","faEye","displayName"],"sourceRoot":""}